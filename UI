local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

-- Variables
local autokillplayerlocal = false
local whitelistedPlayers = {}

-- Create window
local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Create Tabs
local KillerTab = Window:AddTab({ Title = "Killer", Icon = "rbxassetid://12345678" })

-- Toggle for auto kill
local Toggle = KillerTab:AddToggle("AutoKill", {
    Title = "Auto Kill All",
    Default = false,
    Callback = function(value)
        autokillplayerlocal = value
        
        while autokillplayerlocal do
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and not whitelistedPlayers[player.Name] then
                    pcall(function()
                        local charkterkiller = player.Character
                        local mycharacter = LocalPlayer.Character
                        
                        if charkterkiller and mycharacter then
                            local head = charkterkiller:FindFirstChild("Head")
                            local leftHand = mycharacter:FindFirstChild("LeftHand")
                            
                            if head and leftHand then
                                head.Transparency = 1
                                if head:FindFirstChild("Face") then
                                    head.Face:Destroy()
                                end
                                head.CFrame = leftHand.CFrame
                                LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
                                LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
                            end
                        end
                    end)
                end
            end
            RunService.Heartbeat:Wait()
        end
    end
})

-- Whitelist Input
local Input = KillerTab:AddInput("WhitelistInput", {
    Title = "Whitelist Player",
    Default = "",
    Placeholder = "Enter player name",
    Callback = function(text)
        whitelistedPlayers[text] = true
        Fluent:Notify({
            Title = "Whitelist",
            Content = text .. " has been whitelisted",
            Duration = 3
        })
    end
})

-- Unwhitelist Input
local UnwhitelistInput = KillerTab:AddInput("UnwhitelistInput", {
    Title = "Unwhitelist Player",
    Default = "",
    Placeholder = "Enter player name",
    Callback = function(text)
        whitelistedPlayers[text] = nil
        Fluent:Notify({
            Title = "Whitelist",
            Content = text .. " has been unwhitelisted",
            Duration = 3
        })
    end
})

-- Show Whitelist Button
local ShowButton = KillerTab:AddButton({
    Title = "Show Whitelisted Players",
    Callback = function()
        local players = {}
        for player, _ in pairs(whitelistedPlayers) do
            table.insert(players, player)
        end
        Fluent:Notify({
            Title = "Whitelisted Players",
            Content = #players > 0 and table.concat(players, ", ") or "No players whitelisted",
            Duration = 5
        })
    end
})

-- Initial notification
Fluent:Notify({
    Title = "Script Loaded",
    Content = "Invisible Head Targeting + Whitelist Active",
    Duration = 5
})
